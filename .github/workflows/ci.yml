name: CI & CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
  # Publish a release when a tag starting with 'v' is pushed
  release:
    types: [published]

jobs:
  lint:
    name: Syntax Check (lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Verify Python files compile
        run: |
          python -m compileall -q .
      - name: Run code style & static analysis checks (Task 28)
        run: |
          python -m pip install --upgrade pip
          pip install black==23.12.1 isort==5.13.2 flake8==6.1.0 mypy==1.8.0
          black --check .
          isort --check-only .
          flake8 .
          mypy --config-file mypy.ini .

  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pytest suite
        run: |
          pytest -q

  build:
    name: Build Windows Executable
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.8.0
      - name: Build executable with PyInstaller
        run: |
          pyinstaller "InstantScribe.spec" --noconfirm
      - name: Upload build artifact (Instant Scribe.exe)
        uses: actions/upload-artifact@v4
        with:
          name: instant-scribe-win-exe
          path: dist/Instant Scribe/Instant Scribe.exe
      - name: Sign executable with signtool (Task 30)
        if: env.CERTIFICATE_PFX_BASE64 != ''
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $certBase64 = $env:CERTIFICATE_PFX_BASE64
          if (-not $certBase64) {
            Write-Host 'No certificate provided; skipping signing.'
            exit 0
          }
          $certPath = 'codesign.pfx'
          [System.IO.File]::WriteAllBytes($certPath, [System.Convert]::FromBase64String($certBase64))
          $exePath = 'dist/Instant Scribe/Instant Scribe.exe'
          $timestampUrl = 'http://timestamp.digicert.com'
          signtool sign /f $certPath /p $env:PFX_PASSWORD /tr $timestampUrl /td sha256 /fd sha256 "$exePath"

      - name: Verify executable signature (Task 30)
        shell: pwsh
        run: |
          scripts/verify_signature.ps1 'dist/Instant Scribe/Instant Scribe.exe'

  release:
    name: Create GitHub Release & Attach Installer
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: instant-scribe-win-exe
          path: ./release-artifacts
      - name: Publish release with asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-artifacts/Instant Scribe.exe 